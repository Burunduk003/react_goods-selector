{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","goodsSelector","goods","length","slice","join","removeGood","good","setState","filter","product","addGood","clearAllGoods","this","className","type","classNames","onClick","map","includes","key","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA4FaC,E,4MAxFbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,cAAgB,SAACC,GACf,OAAQA,EAAMC,QACZ,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBACF,QACE,MAAO,UAAGA,EAAME,MAAM,EAAGF,EAAMC,OAAS,GAAGE,KAAK,OAAzC,eACGH,EAAMA,EAAMC,OAAS,GADxB,mB,EAKbG,WAAa,SAACC,GACZ,EAAKC,UAAS,SAAAT,GAAK,MAAK,CACtBC,cAAeD,EAAMC,cAAcS,QAAO,SAAAC,GAAO,OAAIA,IAAYH,U,EAIrEI,QAAU,SAACJ,GACT,EAAKC,UAAS,SAAAT,GAAK,MAAK,CACtBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BO,S,EAI5CK,cAAgB,WACd,EAAKJ,SAAS,CAAER,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBa,KAAKd,MAAvBC,cAER,OACE,yBAAKc,UAAU,OACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eACXD,KAAKZ,cAAcD,IAEtB,4BACEe,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,6BAAuD,IAAzBhB,EAAcG,SAE9Cc,QAASJ,KAAKD,eALhB,WAUF,4BACGf,EAAgBqB,KAAI,SAAAX,GAAI,OACvB,wBACEO,UACEd,EAAcmB,SAASZ,GACnB,8BACA,YAENa,IAAKb,GAEL,8BAAOA,GACP,4BACEO,UAAU,iBACVC,KAAK,SACLE,QAAS,kBACNjB,EAAcmB,SAASZ,IAAS,EAAKI,QAAQJ,KAJlD,OASA,4BACEO,UAAU,oBACVC,KAAK,SACLE,QAAS,kBACPjB,EAAcmB,SAASZ,IAAS,EAAKD,WAAWC,KAJpD,oB,GAxEIc,aCblBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.eb0fbfb3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends Component {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  goodsSelector = (goods) => {\n    switch (goods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${goods[0]} is selected`;\n      default:\n        return `${goods.slice(0, goods.length - 1).join(', ')}`\n        + ` and ${goods[goods.length - 1]} are selected`;\n    }\n  }\n\n  removeGood = (good) => {\n    this.setState(state => ({\n      selectedGoods: state.selectedGoods.filter(product => product !== good),\n    }));\n  };\n\n  addGood = (good) => {\n    this.setState(state => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  clearAllGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__wrapper\">\n          <h1 className=\"App__header\">\n            {this.goodsSelector(selectedGoods)}\n          </h1>\n          <button\n            type=\"button\"\n            className={classNames('App__clear-button', {\n              'App__clear-button--disable': selectedGoods.length === 0,\n            })}\n            onClick={this.clearAllGoods}\n          >\n            âœ—\n          </button>\n        </div>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              className={\n                selectedGoods.includes(good)\n                  ? 'App__good App__good--active'\n                  : 'App__good'\n              }\n              key={good}\n            >\n              <span>{good}</span>\n              <button\n                className=\"App__addButton\"\n                type=\"button\"\n                onClick={() => (\n                  !selectedGoods.includes(good) && this.addGood(good)\n                )}\n              >\n                Add\n              </button>\n              <button\n                className=\"App__removeButton\"\n                type=\"button\"\n                onClick={() => (\n                  selectedGoods.includes(good) && this.removeGood(good)\n                )}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}